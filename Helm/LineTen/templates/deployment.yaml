{{- $path := include "LineTen-weatherforecast.path" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "LineTen-weatherforecast.fullname" . }}
  namespace: {{ .Values.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
{{ include "LineTen-weatherforecast.labels" . | indent 4 }}
spec:
  replicas: {{ include "LineTen-weatherforecast.replicaCount" . }}
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "LineTen-weatherforecast.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "LineTen-weatherforecast.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.container.port | quote }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: app
              containerPort: {{ .Values.container.port}}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.container.port}}            
            initialDelaySeconds: 3
            periodSeconds: 10 
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.container.port}}            
            initialDelaySeconds: 3
            periodSeconds: 10 
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3  
          env:
            - name: RepoCommitId
              value: {{ .Values.repoCommitId }}
            - name: RepoBranch
              value: {{ .Values.repoBranch }}
            - name: DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT
              value: "true"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "LineTen-weatherforecast.name" . }}
              topologyKey: kubernetes.io/hostname
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

